import os
import random
import time
from datetime import timedelta

from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils import executor

bot = Bot(token='TG-API')
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

skins_folder = 'skins'  # –ø—É—Ç—å –∫ –≤–∞—à–µ–π –ø–∞–ø–∫–µ —Å–æ —Å–∫–∏–Ω–∞–º–∏

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
keyboard_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
start_button = types.KeyboardButton('/start')
skins_button = types.KeyboardButton('/skins')
rolle_button = types.KeyboardButton('/rolle')
keyboard_markup.row(start_button, skins_button, rolle_button)

@dp.message_handler(lambda message: message.text.lower() == '/start')
async def start_command(message: types.Message):
    await message.answer('–ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –±–æ—Ç—É —Ç—ã –º–æ–∂–µ—à—å –ë–ï–°–ü–õ–ê–¢–ù–û –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–Ω —Ü–µ–Ω–æ–π –¥–æ 5$ –í—Ä–∞—â–∞—è –±–∞—Ä–∞–±–∞–Ω —Ä–∞–∑ –≤ 5 –¥–Ω–µ–π!\n–ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ —Å–∫–∏–Ω—ã –≤ –Ω–∞–ª–∏—á–∏–∏ –≤–≤–µ–¥–∏ "/skins"', reply_markup=keyboard_markup)

@dp.message_handler(lambda message: message.text.lower() == '/skins')
async def show_skins(message: types.Message):
    skins_list = os.listdir(skins_folder)

    for skin in skins_list:
        # —Å–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        skin_path = os.path.join(skins_folder, skin)

        # —É–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
        skin_name, _ = os.path.splitext(skin)

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∏–Ω–∞ —Å –∏–º–µ–Ω–µ–º
        with open(skin_path, 'rb') as skin_image:
            await bot.send_photo(message.chat.id, skin_image, caption=f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–∏–Ω–∞: {skin_name}")

@dp.message_handler(lambda message: message.text.lower() == '/rolle')
async def rolle_skin(message: types.Message):
    last_rolle_data = await storage.get_data(chat=message.chat.id, user=message.from_user.id)
    last_rolle_time = float(last_rolle_data.get('last_rolle_time', 0))

    if time.time() - last_rolle_time > 5 * 24 * 60 * 60:
        # –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 5 –¥–Ω–µ–π –∏–ª–∏ –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
        await storage.update_data(chat=message.chat.id, user=message.from_user.id, last_rolle_time=time.time())

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∫—É–±–∏–∫–∞
        await bot.send_dice(message.chat.id, emoji="üé≤")
        time.sleep(5)
        skins_list = os.listdir(skins_folder)
        random_skin = random.choice(skins_list)
        #–¥–µ–ª–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–∞–Ω–¥ —Å–∫–∏–Ω
        random_skin_path = os.path.join(skins_folder, random_skin)
        with open(random_skin_path, 'rb') as random_skin_image:
            # —É–≤–µ–¥ –æ –≤—ã–∏–≥—Ä—ã—à–µ –∏ —Ç.–¥.
            await bot.send_photo(message.chat.id, random_skin_image, caption="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –≤—ã–∏–≥—Ä–∞–ª —Å–∫–∏–Ω! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–±–º–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ\nFAKE_TRADE_LINK")
    else:
        # –≤—ã—á–∏—Å–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è /rolle
        remaining_time = timedelta(seconds=(5 * 24 * 60 * 60 - (time.time() - last_rolle_time)))
        remaining_time_str = str(remaining_time).split('.')[0]  # —É–¥–∞–ª–µ–Ω–∏–µ –º–∏–ª—Å–µ–∫
        await message.answer(f"–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /rolle —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 5 –¥–Ω–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ {remaining_time_str}.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
